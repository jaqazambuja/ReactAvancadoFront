[{"/var/www/html/projeto/eletroloja/src/App.js":"1","/var/www/html/projeto/eletroloja/src/Pages/Produtos.js":"2","/var/www/html/projeto/eletroloja/src/rotas.js":"3","/var/www/html/projeto/eletroloja/src/components/Menu/index.js":"4","/var/www/html/projeto/eletroloja/src/index.js":"5","/var/www/html/projeto/eletroloja/src/components/Produto/index.js":"6","/var/www/html/projeto/eletroloja/src/Pages/Lojas.js":"7","/var/www/html/projeto/eletroloja/src/Pages/Contato.js":"8","/var/www/html/projeto/eletroloja/src/Pages/Pedidos.js":"9","/var/www/html/projeto/eletroloja/src/Pages/Infos.js":"10","/var/www/html/projeto/eletroloja/src/Pages/Home.js":"11","/var/www/html/projeto/eletroloja/src/components/Rodape.js":"12","/var/www/html/projeto/eletroloja/src/components/Info.js":"13"},{"size":1136,"mtime":1613145945143,"results":"14","hashOfConfig":"15"},{"size":719,"mtime":1612356795296,"results":"16","hashOfConfig":"15"},{"size":658,"mtime":1607286359340,"results":"17","hashOfConfig":"15"},{"size":1502,"mtime":1607815292609,"results":"18","hashOfConfig":"15"},{"size":201,"mtime":1606605359330,"results":"19","hashOfConfig":"15"},{"size":982,"mtime":1607280392113,"results":"20","hashOfConfig":"15"},{"size":1591,"mtime":1607281120904,"results":"21","hashOfConfig":"15"},{"size":1789,"mtime":1612448017660,"results":"22","hashOfConfig":"15"},{"size":4247,"mtime":1613094435213,"results":"23","hashOfConfig":"15"},{"size":263,"mtime":1607802338109,"results":"24","hashOfConfig":"15"},{"size":713,"mtime":1613146237482,"results":"25","hashOfConfig":"15"},{"size":270,"mtime":1613145448633,"results":"26","hashOfConfig":"15"},{"size":179,"mtime":1613146021048,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1iii8zg",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/var/www/html/projeto/eletroloja/src/App.js",["59"],"/var/www/html/projeto/eletroloja/src/Pages/Produtos.js",["60","61"],"import { useState, useEffect } from 'react';\n\n\nimport Produto from '../components/Produto'\nimport { container, Row } from 'react-bootstrap'\nimport { Container } from 'react-bootstrap'\n\n\nexport default function Produtos() {\n    const [produtos, setProdutos] = useState([]);\n\n    useEffect(async () => {\n        const resposta = await fetch(\"http://localhost:3333/\")\n        const dados = await resposta.json();\n        setProdutos(dados);\n    }, []);\n\n    return (\n        <Container>\n            <Row>\n                {produtos && produtos.map(item => <Produto imagem={item.imagem} nome={item.nome} preco={item.preco}\n                categoria={item.televisores} />)}\n            </Row>\n        </Container>\n    )\n}\n\n\n\n",["62","63"],"/var/www/html/projeto/eletroloja/src/rotas.js",[],"/var/www/html/projeto/eletroloja/src/components/Menu/index.js",["64","65","66"],"/var/www/html/projeto/eletroloja/src/index.js",[],["67","68"],"/var/www/html/projeto/eletroloja/src/components/Produto/index.js",[],"/var/www/html/projeto/eletroloja/src/Pages/Lojas.js",["69"],"/var/www/html/projeto/eletroloja/src/Pages/Contato.js",["70"],"//import './Contato.css';\nimport React from 'react';\n\n\nexport default function Contato(){\n    const [form, setForm] = React.useState({\n\n        nome: \"\",\n        email: \"\",\n        mensagem: \"\"\n    })\n\n    const [response, setResponse] = React.useState(null)\n\n    function handleChange({target}){\n        const {id, value} = target\n        setForm({...form, [id]: value})\n        console.log({[id]:value});\n    }\n\n    function handleSubmit(event){\n        fetch('http://localhost:3333/contatos', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n    \n            body: JSON.stringify(form)\n        }).then((res) =>{\n            setResponse(res);\n        })\n    }\n        \n\n\n    return(\n        <div className=\"container mt-4 contato\" class=\"text-white\">\n        <h3 className=\"text-center display-4\">Deixe sua mensagem!</h3>\n        <form onSubmit={handleSubmit}> \n            <div className=\"form-group\">\n                <label for=\"text\">Nome</label>\n                <input type=\"text\" className=\"form-control\" name=\"nome\" id=\"nome\" value={form.nome} onChange={handleChange}></input>\n            </div>\n            <div className=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input type=\"email\" class=\"form-control\" name=\"email\" id=\"email\" value={form.email} onChange={handleChange}></input>\n            </div>\n            <div className=\"form-group\">\n                <label>Digite sua mensagem</label>\n                <textarea class=\"form-control\" name=\"mensagem\" id=\"mensagem\" value={form.mensagem} onChange={handleChange} />\n                <button className=\"btn btn-primary mt-3\" type=\"submit\">Enviar</button>\n            </div>\n        </form>\n        </div>        \n    );\n}\n\n","/var/www/html/projeto/eletroloja/src/Pages/Pedidos.js",["71"],"import {useEffect, useState} from 'react';\nimport { Form, Row } from 'react-bootstrap';\nimport Infos from './Infos';\n\nexport default function Pedidos(){\n    const [pedidos, setPedidos] = useState([]);\n    const [form, setForm] = useState({\n        nome: \"\",\n        cidade: \"\",\n        produto: \"\",\n        quantidade: \"\"\n    })\n\n    const [response, setResponse] = useState(null)\n\n    function handleChange({target}){\n        const {id, value} = target\n        setForm({...form, [id]: value})\n        console.log({[id]:value});\n    }\n\n    function handleSubmit(event){                                                               \n        fetch('http://localhost:3333/pedidos', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(form)\n        }).then((res) =>{\n            setResponse(res);\n        })\n    }\n\n\n    useEffect(() => {\n        async function atualizarPedido(){\n            const url = \"http://localhost:3333/pedidos\";\n            const resposta = await fetch(url);\n            const resultado = await resposta.json();\n            setPedidos(resultado);\n        }\n\n        atualizarPedido();\n    }, [])\n    \n\n    return(\n        <Row>\n        <div className='container container-fluid formulario' >\n            <div className=\"col lg-6 mx-auto\" class=\"text-white\">\n            <Form onSubmit={handleSubmit} class=\"text-white\"> \n            <h3 className=\"titulo-form-\">Faça seu pedido</h3>\n            <Form.Group>\n                            <Form.Label class=\"text-white\" >Nome </Form.Label>\n                            <Form.Control type=\"text\" id=\"nome\" name=\"nome\" value={form.nome} onChange={handleChange}></Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>cidade</Form.Label>\n                            <Form.Control type=\"text\" id=\"cidade\" name=\"cidade\" value={form.cidade} onChange={handleChange}></Form.Control>\n                        </Form.Group>\n                        <Form.Group >\n                            <Form.Label>Produto</Form.Label>\n                            <Form.Control id='produto' name=\"produto\" as=\"select\" value={form.produto} onChange={handleChange}>\n                            <option value='21' >Televisor semp 20 polegadas</option> \n                            <option value='22' >Televisor phillips 20 polegadas</option> \n                            <option value='23' >Televisor Sony polegadas</option> \n                            <option value='24' >Playstation 1 Sony classic</option> \n                            <option value='25' >Super Nintendo</option> \n                            <option value='26' >Playstation 2 Sony</option> \n                            <option value='27' >Walkman discman Sony portátil cd player</option> \n                            <option value='28' >DvD Mondial</option> \n                            <option value='29' >Nintendo game boy</option> \n                            </Form.Control>\n                            </Form.Group>\n                            <Form.Group>\n                            <Form.Label>Quatidade </Form.Label>\n                            <Form.Control type=\"number\" id=\"quantidade\" name=\"quantidade\" value={form.quantidade} onChange={handleChange}></Form.Control>\n                        </Form.Group>     \n                        <input className=\"btn btn-primary\" type=\"submit\" name=\"enviar\" value=\"Enviar\" />\n                        </Form>\n                        </div>\n                        </div>\n            \n            <div className=\"row\">\n                <div className=\"col-lg-12 col-md-12 mx-auto\">\n                    <table className=\"table table-stripe\">\n                        <tbody class=\"text-white\">\n                            {pedidos && pedidos.map(cadastro => <Infos key={cadastro.id} nome={cadastro.nome} cidade={cadastro.cidade} produto={cadastro.produto} descricao={cadastro.descricao} quantidade={cadastro.quantidade} precofinal={cadastro.precofinal} />) }\n                      \n                      </tbody>\n                </table>\n                </div>\n            </div>\n        </Row>\n\n        );\n    }","/var/www/html/projeto/eletroloja/src/Pages/Infos.js",[],"/var/www/html/projeto/eletroloja/src/Pages/Home.js",[],"/var/www/html/projeto/eletroloja/src/components/Rodape.js",[],"/var/www/html/projeto/eletroloja/src/components/Info.js",[],{"ruleId":"72","severity":1,"message":"73","line":6,"column":21,"nodeType":"74","messageId":"75","endLine":6,"endColumn":30},{"ruleId":"72","severity":1,"message":"73","line":5,"column":10,"nodeType":"74","messageId":"75","endLine":5,"endColumn":19},{"ruleId":"76","severity":1,"message":"77","line":12,"column":15,"nodeType":"78","endLine":16,"endColumn":6},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"72","severity":1,"message":"83","line":1,"column":23,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"84","severity":1,"message":"85","line":9,"column":13,"nodeType":"86","endLine":9,"endColumn":41},{"ruleId":"87","severity":1,"message":"88","line":10,"column":13,"nodeType":"86","endLine":10,"endColumn":84},{"ruleId":"79","replacedBy":"89"},{"ruleId":"81","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":14,"column":89,"nodeType":"93","endLine":14,"endColumn":134},{"ruleId":"72","severity":1,"message":"94","line":13,"column":12,"nodeType":"74","messageId":"75","endLine":13,"endColumn":20},{"ruleId":"72","severity":1,"message":"94","line":14,"column":12,"nodeType":"74","messageId":"75","endLine":14,"endColumn":20},"no-unused-vars","'container' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-native-reassign",["95"],"no-negated-in-lhs",["96"],"'nav' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["95"],["96"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]